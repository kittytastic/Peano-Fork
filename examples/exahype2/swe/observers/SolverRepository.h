//
// ExaHyPE2 solver file
// Generated by Peano's Python API
// www.peano-framework.org
//
// This is generated. If you change fundamental properties, you will have to
// generate this file. Backup your manual changes before you do so.
//
#ifndef _examples_exahype2_swe_observers_SolverRepository_H_
#define _examples_exahype2_swe_observers_SolverRepository_H_



#include "toolbox/loadbalancing/NoLoadBalancing.h"

#include "exahype2/RefinementControl.h"
#include "peano4/grid/GridStatistics.h"


#include "SWE.h"


namespace examples {namespace exahype2 {namespace swe {namespace observers {

  extern SWE  InstanceOfSWE;


  extern ::exahype2::RefinementControl  refinementControl;

  extern toolbox::loadbalancing::NoLoadBalancing  loadBalancer;
  extern peano4::grid::GridStatistics   gridStatisticsAfterGridConstruction;


  double getMinTimeStamp();
  double getMaxTimeStamp();
  double getMinTimeStepSize();
  double getMaxTimeStepSize();
  double getMinMeshSize();
  double getMaxMeshSize();

  void startGridConstructionStep();
  void startGridInitialisationStep();

  void startTimeStep(
    double globalMinTimeStamp,
    double globalMaxTimeStamp,
    double globalMinTimeStepSize,
    double globalMaxTimeStepSize
  );

  void startPlottingStep(
    double globalMinTimeStamp,
    double globalMaxTimeStamp,
    double globalMinTimeStepSize,
    double globalMaxTimeStepSize
  );

  void finishGridConstructionStep();
  void finishGridInitialisationStep();
  void finishTimeStep();
  void finishPlottingStep();

  void finishSimulation();

}}}}


#endif