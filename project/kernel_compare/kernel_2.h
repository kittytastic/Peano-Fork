#include "kernel_base.h"
#include "kernel_2_base.h"
#include "data_generator.h"
#include "tarch/la/Vector.h"
#include  <iostream>

double inData[5*5*4] = {4.65e-310, 6.90e-310, 0.00e+00, 6.90e-310, 1.00e-01, 0.00e+00, 0.00e+00, 0.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 0.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 0.00e+00, 0, 2.22e-322, 00, 6.95e-310, 1.00e-01, 0.00e+00, 0.00e+00, 0.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 0.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 0.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 5.00e-01, 5.00e-01, 2.50e+00, 5.00e-01, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 6.95e-310, 4.65e-310, 4.65e-310, 4.65e-310};

double outData[3*3*4] = {1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00, 1.00e-01, 0.00e+00, 0.00e+00, 1.00e+00};

void k2_getdata(int x, double* data){
    for(int i=0; i<x; i++){
        data[i] = inData[i];
    }

    //int b=0;
    //for(int i=0; i<10000000; i++){b++;}
}

void k2_runKernel(double * inVec, double* outVec){
    tarch::la::Vector<2,double> patchCenter;
    patchCenter(0)=1;
    patchCenter(1)=1;
    tarch::la::Vector<2,double> patchSize;
    patchSize(0)=1;
    patchSize(1)=1;
    compliedKernel(
        patchCenter,
        patchSize,
        1.0,
        0.001,
        inVec,
        outVec
    );
}

Kernel k2(k2_getdata, k2_runKernel, 5*5*4, 3*3*4);

