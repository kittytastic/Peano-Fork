#
# Peano4 Makefile
# Generated by Peano's Python API
#
.PHONY: all solver clean


CXX = {{CXX}}
FC  = {{FC}}
DIMENSIONS = {{DIM}}

{% if MODE=="RELEASE" and DIM=="2" %}
CXXFLAGS += {{CXXFLAGS}} -I. -I{{CONFIGUREPATH}}/src {{CXXFLAGS_PEANO_2D_RELEASE}}
LDFLAGS  += {{LDFLAGS}} {{LDFLAGS_PEANO_RELEASE}}
LIBS += {{LIBS}} -L{{CONFIGUREPATH}}/src {{LDADD_PEANO_2D_RELEASE}}
{% endif %}

{% if MODE=="STATS" and DIM=="2" %}
CXXFLAGS += {{CXXFLAGS}} -I. -I{{CONFIGUREPATH}}/src {{CXXFLAGS_PEANO_2D_STATS}}
LDFLAGS  += {{LDFLAGS}} {{LDFLAGS_PEANO_STATS}}
LIBS += {{LIBS}} -L{{CONFIGUREPATH}}/src {{LDADD_PEANO_2D_STATS}}
{% endif %}

{% if MODE=="ASSERTS" and DIM=="2" %}
CXXFLAGS += {{CXXFLAGS}} -I. -I{{CONFIGUREPATH}}/src {{CXXFLAGS_PEANO_2D_ASSERTS}}
LDFLAGS  += {{LDFLAGS}} {{LDFLAGS_PEANO_ASSERTS}}
LIBS += {{LIBS}} -L{{CONFIGUREPATH}}/src {{LDADD_PEANO_2D_ASSERTS}}
{% endif %}

{% if MODE=="TRACE" and DIM=="2" %}
CXXFLAGS += {{CXXFLAGS}} -I. -I{{CONFIGUREPATH}}/src {{CXXFLAGS_PEANO_2D_TRACE}}
LDFLAGS  += {{LDFLAGS}} {{LDFLAGS_PEANO_TRACE}}
LIBS += {{LIBS}} -L{{CONFIGUREPATH}}/src {{LDADD_PEANO_2D_TRACE}}
{% endif %}

{% if MODE=="DEBUG" and DIM=="2" %}
CXXFLAGS += {{CXXFLAGS}} -I. -I{{CONFIGUREPATH}}/src {{CXXFLAGS_PEANO_2D_DEBUG}}
LDFLAGS  += {{LDFLAGS}} {{LDFLAGS_PEANO_DEBUG}}
LIBS += {{LIBS}} -L{{CONFIGUREPATH}}/src {{LDADD_PEANO_2D_DEBUG}}
{% endif %}

{% if MODE=="RELEASE" and DIM=="3" %}
CXXFLAGS += {{CXXFLAGS}} -I. -I{{CONFIGUREPATH}}/src {{CXXFLAGS_PEANO_3D_RELEASE}}
LDFLAGS  += {{LDFLAGS}} {{LDFLAGS_PEANO_RELEASE}}
LIBS += {{LIBS}} -L{{CONFIGUREPATH}}/src {{LDADD_PEANO_3D_RELEASE}}
{% endif %}

{% if MODE=="STATS" and DIM=="3" %}
CXXFLAGS += {{CXXFLAGS}} -I. -I{{CONFIGUREPATH}}/src {{CXXFLAGS_PEANO_3D_STATS}}
LDFLAGS  += {{LDFLAGS}} {{LDFLAGS_PEANO_STATS}}
LIBS += {{LIBS}} -L{{CONFIGUREPATH}}/src {{LDADD_PEANO_3D_STATS}}
{% endif %}

{% if MODE=="ASSERTS" and DIM=="3" %}
CXXFLAGS += {{CXXFLAGS}} -I. -I{{CONFIGUREPATH}}/src {{CXXFLAGS_PEANO_3D_ASSERTS}}
LDFLAGS  += {{LDFLAGS}} {{LDFLAGS_PEANO_ASSERTS}}
LIBS += {{LIBS}} -L{{CONFIGUREPATH}}/src {{LDADD_PEANO_3D_ASSERTS}}
{% endif %}

{% if MODE=="TRACE" and DIM=="3" %}
CXXFLAGS += {{CXXFLAGS}} -I. -I{{CONFIGUREPATH}}/src {{CXXFLAGS_PEANO_3D_TRACE}}
LDFLAGS  += {{LDFLAGS}} {{LDFLAGS_PEANO_TRACE}}
LIBS += {{LIBS}} -L{{CONFIGUREPATH}}/src {{LDADD_PEANO_3D_TRACE}}
{% endif %}

{% if MODE=="DEBUG" and DIM=="3" %}
CXXFLAGS += {{CXXFLAGS}} -I. -I{{CONFIGUREPATH}}/src {{CXXFLAGS_PEANO_3D_DEBUG}}
LDFLAGS  += {{LDFLAGS}} {{LDFLAGS_PEANO_DEBUG}}
LIBS += {{LIBS}} -L{{CONFIGUREPATH}}/src {{LDADD_PEANO_3D_DEBUG}}
{% endif %}


FCFLAGS  += {{FCFLAGS}}

GPU_OBJS = {{GPUOBJS}}

CXX_SOURCES={% for item in CXX_SOURCES -%} {{item+" "}} {%- endfor %} 
FORTRAN_SOURCES={% for item in FORTRAN_SOURCES -%} {{item+" "}} {%- endfor %}


CXX_OBJS=$(subst .cpp,.o,$(CXX_SOURCES))
FORTRAN_OBJS=$(subst .f,.o,$(subst .f90,.o,$(FORTRAN_SOURCES)))
FORTRAN_MODULE_OBJS={% for module in FORTRAN_MODULES -%} {{module | replace(".f90", ".o") +" "}} {%- endfor %}

all: solver


%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<


%.o: %.f90
	$(FC) $(FCFLAGS) -c -o $@ $<

    
{% for module in FORTRAN_MODULES -%} 
.NOTPARALLEL: {{module | replace(".f90", ".mod") }}
{{module | replace(".f90", ".mod")}}: {{module | replace(".f90", ".o") + "\n\n" }}  
{%- endfor %}



#
# Linker arguments are read from left to right and objects are thrown away
# per step if they are not required anymore. That is: left libraries can
# depend objects right but not the other way round.
#
solver: {% for module in FORTRAN_MODULES -%} {{module | replace(".f90", ".mod") +" "}} {%- endfor %} $(CXX_OBJS) $(FORTRAN_OBJS)
	$(CXX) $(FORTRAN_MODULE_OBJS) $(FORTRAN_OBJS) $(CXX_OBJS) $(LDFLAGS) $(GPU_OBJS) $(LIBS) -o {{EXECUTABLENAME}} 

    
clean:
	rm -f $(CXX_OBJS) $(FORTRAN_OBJS) $(FORTRAN_MODULE_OBJS)
	rm -f *.mod
	rm -f {{EXECUTABLENAME}}
