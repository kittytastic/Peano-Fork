------------------------------------
Peano pvpython visualisation
------------------------------------


------------------------------------
....Disclaimer......................
These vis scripts are not at any reasonable level of maturity, but very much still under construction.
Feel free to have a go with them, but do not be disappointed if things fail, are not implemented,
or are at a less than ideal level.
....................................


------------------------------------
Files
------------------------------------

...OutputFileParser.py:...
Parser class for peano-patch-files with 2D or 3D data.
To be initialised with path to peano-patch-file. 

...Patch.py...
Patch class that contains offset, size and value of a Peano patch. (Basically a struct.)


...render.py...
Renderer script. Contains functions to prepare and render 2D and 3D grids. Currently takes the file path of the peano-patch-file hard-coded at the end of the file (for convenience during development, to be changed). 


------------------------------------
How to run
------------------------------------

There are two options, both need a functioning install of ParaView:

1. Run as stand-alone vis.
- For this, you need the "Interact()" call in line 199 of render.py. (Note that this will lead to a warning for option 2 and will need to be be guarded in some way at some point.) 
- Simply call the render script as you would a normal python script with "pvpython render.py" (if you like typing you can change the render script to take the file name as an argument).
- The script will render the content of the file in a new window. You can turn the rendered image, but not do much else with it (unless you do it directly in the script).

2. Run in ParaView.
- In ParaView, activate the Python Shell by clicking the check box in the "View" menu.
- Click the "Run Script" button next to the Python Shell.
- In the File Selector dialogue, choose the render.py script and hit "OK".
- The script will run in the Python Shell. You can then change the Display Type, View, etc. in the Paraview GUI. 

At this point, filtering, time step visualisation and other functionality are not implemented yet.
